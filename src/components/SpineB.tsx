/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { useGLTF } from '@react-three/drei';
import * as THREE from 'three';
import { GLTF } from 'three-stdlib';

type GLTFResult = GLTF & {
  nodes: {
    bt_3000a: THREE.Mesh;
    bt_3000a_1: THREE.Mesh;
    bt_3000a_2: THREE.Mesh;
    bt_3000a_3: THREE.Mesh;
    spine_balance_color_edit: THREE.Mesh;
  };
  materials: {
    bt_3000a_01: THREE.MeshStandardMaterial;
    bt_3000a_03: THREE.MeshPhysicalMaterial;
    bt_3000a_04: THREE.MeshStandardMaterial;
    bt_3000a_05: THREE.MeshPhysicalMaterial;
    bt_3000a_02: THREE.MeshPhysicalMaterial;
  };
};

export default function SpineB(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF(
    'https://bluebeaker.blob.core.windows.net/public/3d/spine_balance_color_test_240213.glb'
  ) as GLTFResult;
  return (
    <group position={[0, -0.5, 0]} {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.spine_balance_color_edit.geometry}
        material={materials.bt_3000a_02}
      />
      <mesh castShadow receiveShadow geometry={nodes.bt_3000a.geometry} material={materials.bt_3000a_01} />
      <mesh castShadow receiveShadow geometry={nodes.bt_3000a_1.geometry} material={materials.bt_3000a_03} />
      <mesh castShadow receiveShadow geometry={nodes.bt_3000a_2.geometry} material={materials.bt_3000a_04} />
      <mesh castShadow receiveShadow geometry={nodes.bt_3000a_3.geometry} material={materials.bt_3000a_05} />
    </group>
  );
}

useGLTF.preload('https://bluebeaker.blob.core.windows.net/public/3d/spine_balance_color_test_240213.glb');
